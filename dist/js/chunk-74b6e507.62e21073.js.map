{"version":3,"sources":["webpack:///./src/components/widgets/main_card.vue?2766","webpack:///src/components/widgets/main_card.vue","webpack:///./src/components/widgets/main_card.vue?6171","webpack:///./src/components/widgets/main_card.vue","webpack:///./src/assets/js/plot_GL.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticRenderFns","name","components","mounted","CHANGE_PLOT_DATA","app_data","main_card_index","card_data","plot_data","plotting","set_layout","draw","plots","type","data","computed","is_switch_card","is_update","lakes","prev_filter","watch","set_data","update","methods","component","VContainer","Plotting","div_name","config","displaylogo","responsive","displayModeBar","staticPlot","editable","layout","trace","plot_size","height","margin","r","t","b","l","font","size","Object","keys","xaxis","includes","title","title_temp","yaxis","showticklabels","showline","showgrid","zeroline","showlegend","err","alert","forEach","_","index","textinfo","animated","start_trace","temp","entries","key","value","x","map","y","push","Plotly","newPlot","animate","traces","Array","from","length","transition","duration","easing","purge","frames","gene_frame","then","console","log","frame","redraw","frame_num","i","f_data","parseFloat","layout_config","fig_layout_config","range","max_y","assign","trace_data","trace_0","plotly_config"],"mappings":"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","file":"js/chunk-74b6e507.62e21073.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('div',{staticClass:\"mx-0\",attrs:{\"id\":\"main_card\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <div class=\"mx-0\" id=\"main_card\"></div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport plotting from \"@/assets/js/plot_GL\";\r\nimport { mapState, mapMutations } from \"vuex\";\r\nexport default {\r\n  name: \"main_card\",\r\n  components: {},\r\n  mounted() {\r\n    this.CHANGE_PLOT_DATA(this.app_data.main_card_index);\r\n    this.card_data = this.app_data.plot_data[this.app_data.main_card_index];\r\n    this.plotting = new plotting(\"main_card\", this.card_data);\r\n    this.plotting.set_layout(\"main_plot\");\r\n    this.plotting.draw(this.card_data.plots.type);\r\n  },\r\n  data: () => ({\r\n    card_data: {\r\n      chemical: \"\",\r\n      trend: 0,\r\n    },\r\n  }),\r\n  computed: {\r\n    ...mapState({\r\n      lakes: \"lakes\",\r\n      app_data: \"app_data\",\r\n    }),\r\n    is_switch_card() {\r\n      return this.app_data.main_card_index;\r\n    },\r\n    is_update() {\r\n      return this.lakes.prev_filter;\r\n    },\r\n  },\r\n  watch: {\r\n    is_switch_card() {\r\n      // console.log(this.app_data.main_card_index);\r\n      // console.log(this.card_data.layout);\r\n      this.CHANGE_PLOT_DATA(this.app_data.main_card_index);\r\n      this.card_data = this.app_data.plot_data[this.app_data.main_card_index];\r\n      this.plotting.set_data(this.card_data);\r\n      this.plotting.set_layout(\"main_plot\");\r\n      this.plotting.draw(this.card_data.plots.type);\r\n      this.lakes.update = false;\r\n    },\r\n    is_update() {\r\n      this.CHANGE_PLOT_DATA(this.app_data.main_card_index);\r\n      this.card_data = this.app_data.plot_data[this.app_data.main_card_index];\r\n      this.plotting.set_data(this.card_data);\r\n      this.plotting.set_layout(\"main_plot\");\r\n      this.plotting.draw(this.card_data.plots.type);\r\n      this.lakes.update = false;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"CHANGE_PLOT_DATA\"]),\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main_card.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main_card.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main_card.vue?vue&type=template&id=622f9558&scoped=true&\"\nimport script from \"./main_card.vue?vue&type=script&lang=js&\"\nexport * from \"./main_card.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"622f9558\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer})\n","\r\nimport Plotly from 'plotly.js'\r\n\r\n// function covert_rgb(hex, alpha) {\r\n//     if (hex.length === 3) {\r\n//         hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\r\n//     }\r\n\r\n//     const r = parseInt(hex.substring(0, 2), 16);\r\n//     const g = parseInt(hex.substring(2, 4), 16);\r\n//     const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n//     return `rgba(${r},${g},${b},${alpha})`;\r\n// }\r\n\r\n// function getRandomInt(max) {\r\n//     return Math.floor(Math.random() * Math.floor(max));\r\n//   }\r\n\r\n\r\nexport default class Plotting {\r\n    // fig_opt = {\r\n    //     fig_size: { width: 1180, height: 600 },\r\n    //     fig_margin: { r: 100, t: 50, b: 75, l: 125 },\r\n    //     font: { size: 14 },\r\n    //     showlegend: true,\r\n    //     legend:{ font: { size: 12 }, xanchor: \"auto\", yanchor: \"auto\", x: 1, y: 0 }\r\n    // }\r\n    constructor(div_name, data) {\r\n        this.div_name = div_name\r\n        this.config = {\r\n            displaylogo: false,\r\n            responsive: true,\r\n            displayModeBar: false,\r\n            staticPlot: true,\r\n            editable: false\r\n        }\r\n        this.set_data(data)\r\n    }\r\n\r\n    set_data(data) {\r\n        this.type = data.plots.type\r\n        this.layout = data.layout\r\n        this.trace = data.trace\r\n    }\r\n\r\n    set_layout(plot_size) {\r\n        if (plot_size == \"main_plot\") {\r\n            this.layout.height = 450;\r\n            this.layout.margin = { r: 30, t: 25, b: 25, l: 75 };\r\n            this.layout.font.size = 14;\r\n            if (Object.keys(this.layout.xaxis).includes(\"title_temp\")) {\r\n                this.layout.xaxis.title = this.layout.xaxis.title_temp;\r\n                this.layout.yaxis.title = this.layout.yaxis.title_temp;\r\n            }\r\n            try {\r\n                this.layout.xaxis.title.font.size = 18;\r\n                this.layout.yaxis.title.font.size = 18;\r\n\r\n                this.layout.xaxis.showticklabels = true;\r\n                this.layout.yaxis.showticklabels = true;\r\n\r\n                this.layout.yaxis.showline = true;\r\n                this.layout.xaxis.showline = true;\r\n\r\n                this.layout.yaxis.showgrid = true;\r\n                this.layout.xaxis.showgrid = true;\r\n\r\n                this.layout.xaxis.zeroline = true;\r\n                this.layout.yaxis.zeroline = true;\r\n\r\n                this.config.responsive = true;\r\n                this.config.staticPlot = false;\r\n                // this.config.editable = true;\r\n\r\n\r\n                if (this.type !== \"pie\") {\r\n                    this.layout.showlegend = true;\r\n                } else {\r\n                    this.layout.showlegend = false;\r\n                }\r\n            } catch (err) {\r\n                alert(err);\r\n            }\r\n        }\r\n        else if (plot_size == \"small_plot\") {\r\n            this.layout.height = 200;\r\n            (this.layout.margin = { r: 20, t: 10, b: 25, l: 20 }),\r\n                (this.layout.font.size = 8);\r\n            this.layout.xaxis.title_temp = this.layout.xaxis.title;\r\n            this.layout.xaxis.title = \"\";\r\n            this.layout.yaxis.title_temp = this.layout.yaxis.title;\r\n            this.layout.yaxis.title = \"\";\r\n\r\n            this.layout.xaxis.showticklabels = false;\r\n            this.layout.yaxis.showticklabels = false;\r\n\r\n            // this.layout.yaxis.showline = false;\r\n            // this.layout.xaxis.showline = false;\r\n\r\n            // this.layout.yaxis.showgrid = false;\r\n            // this.layout.xaxis.showgrid = false;\r\n\r\n            this.layout.xaxis.zeroline = false;\r\n            // this.layout.yaxis.zeroline = false;\r\n\r\n            this.layout.showlegend = false;\r\n            if (this.type == \"pie\") {\r\n                this.trace.forEach((_, index) => {\r\n                    this.trace[index].textinfo = \"none\"\r\n                });\r\n            }\r\n            // this.config.responsive = false;\r\n        }\r\n\r\n    }\r\n\r\n    draw(type) {\r\n        var animated = [\"bar\", \"scatter\", \"bar_stacked\",\"box\"]\r\n        if (animated.includes(type)) {\r\n            var start_trace = []\r\n            this.trace.forEach(t => {\r\n                var temp = {}\r\n                for (const [key, value] of Object.entries(t)) {\r\n                    temp[key] = value\r\n                }\r\n                if (type == \"scatter\") {\r\n                    temp.x = temp.x.map(x => x == null ? null : 0)\r\n                }\r\n                temp.y = temp.y.map(x => x == null ? null : 0)\r\n                start_trace.push(temp)\r\n            })\r\n            Plotly.newPlot(this.div_name, start_trace, this.layout, this.config);\r\n            Plotly.animate(this.div_name,\r\n                {\r\n                    data: this.trace,\r\n                    traces: Array.from(Array(this.trace.length).keys()),\r\n                    //  layout: { yaxis:{range: [0, 20] }}\r\n                }, {\r\n                transition: {\r\n                    duration: 1000,\r\n                    easing: 'cubic-in-out'\r\n                },\r\n            })\r\n        }\r\n        else {\r\n            Plotly.newPlot(this.div_name, this.trace, this.layout, this.config);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        Plotly.purge(this.div_name)\r\n    }\r\n\r\n    animate_with_frame() {\r\n        // var frame_num = 30\r\n        var div_name = this.div_name\r\n        var frames = this.gene_frame(this.trace)\r\n        var start_trace = []\r\n        this.trace.forEach((t, index) => {\r\n            var temp = {}\r\n            for (const [key, value] of Object.entries(t)) {\r\n                temp[key] = value\r\n            }\r\n            temp.y = frames[0].data[index].y\r\n            start_trace.push(temp)\r\n        })\r\n        Plotly.newPlot(div_name, start_trace, this.layout, this.config\r\n        ).then(function () {\r\n            console.log(frames)\r\n            Plotly.animate(div_name, frames, {\r\n                transition: {\r\n                    duration: 0\r\n                },\r\n                frame: {\r\n                    duration: 10,\r\n                    redraw: false\r\n                }\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    gene_frame(data, frame_num = 30) {\r\n        console.log(data)\r\n        // var interval = Math.floor(data[0].x.length / frame_num)\r\n        var frames = []\r\n        for (var i = 0; i <= frame_num; i++) {\r\n            var f_data = { data: [] }\r\n            data.forEach(t => {\r\n                var temp = { x: [], y: [] }\r\n                temp.x = t.x.map(x => x)\r\n                temp.y = t.y.map(y => parseFloat(y) / frame_num * i)\r\n                f_data.data.push(temp)\r\n            })\r\n            frames.push(f_data)\r\n        }\r\n        return frames\r\n    }\r\n\r\n    plot_animation(data, layout_config = {}) {\r\n        var fig_layout_config = {\r\n            yaxis: { range: [0, data.max_y] },\r\n        }\r\n        Object.assign(fig_layout_config, layout_config)\r\n        var layout = this.set_layout(fig_layout_config)\r\n        Plotly.newPlot(this.div_name, data.trace_data.trace_0, layout, this.plotly_config);\r\n\r\n        var traces = Array.from(Array(data.trace_data.trace.length).keys())\r\n        Plotly.animate(this.div_name, {\r\n            data: data.trace_data.trace,\r\n            traces: traces,\r\n            layout: { range: [0, data.max_y] }\r\n        }, {\r\n            transition: {\r\n                duration: 1000,\r\n                easing: 'cubic-in-out'\r\n            },\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\n"],"sourceRoot":""}